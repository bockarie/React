import React, { Component } from 'react';
import './App.css';
import { object } from 'prop-types';


const formValid = formErrors => {
  let valid = true;

  object.values(formErrors).forEach(val => {
    val.length > 0 && (valid = false);
  });
  return valid;
};

class App extends Component {
  constructor(props) {
    super(props);

    this.state = {
      firstName: null,
      lastName: null,
      email: null,
      password: null,
      formErrors: {
        firstName: "",
        lastName: "",
        email: "",
        password: "",
      }
    };
  }

  handleSubmit = e => {
    e.preventDefault();
    if(formValid(this.state.formErrors)) {
      console.log(` --SUBMITTING--
        first Name: ${this.state.firstName}
        last Name: ${this.state.lastName}
        email: ${this.state.email}
        password: ${this.state.password}
        `)
    } else {
      console.error('FORM INVALID - DISPLAY ERROR MESSAGE');
    }
  };
  handleChange = e => {
    e.preventDefault();
    const {name,value} = e.target;
    let formErrors = this.state.formErrors;

    switch (name) {
      case 'firstName':
        formErrors.firstName = 
        value.length <4 && value.length >0 
        ? 'minimum 4 characters required'
        :"";
        break;
      case 'lastName':
        formErrors.lastName =
          value.length < 4 && value.length > 0
            ? 'minimum 4 characters required'
            : "";
        break;
      case 'email':
        formErrors.email =
          value.length < 5 && value.length > 0
            ? 'minimum 5 characters required'
            : "";
        break;
      case 'password':
        formErrors.password =
          value.length < 8 && value.length > 0
            ? 'minimum 8 characters required'
            : "";
        break;
        default:
          break;

    }
  }

  render(){
    return <div className="wrapper">
      <div className="form-wrapper">
        <form onSubmit={this.handleSubmit} noValidate>
          <div className="firstName">
            <label htmlFor="firstName">First Name</label>
            <input
             type="text" 
             className=""
              placeholder="First Name" 
              type="text" 
              name="firstname" 
              noValidate
              onChange={this.handleChange}
              />
           </div>
          <div className="lastName">
            <label htmlFor="lastName">Last Name</label>
            <input
              type="text"
              className=""
              placeholder="Last Name"
              type="text"
              name="lastname"
              noValidate
              onChange={this.handleChange}
            />
          </div>
          <div className="email">
            <label htmlFor="email">Email</label>
            <input
              type="text"
              className=""
              placeholder="Email"
              type="text"
              name="email"
              noValidate
              onChange={this.handleChange}
            />
          </div>
          <div className="password">
            <label htmlFor="password">Password</label>
            <input
              type="text"
              className=""
              placeholder="Password"
              type="text"
              name="password"
              noValidate
              onChange={this.handleChange}
            />
         </div>

        </form>

      </div>

    </div>
  }
}

export default App;

.wrapper {
  height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: aquamarine;
}
.form-wrapper {
  width: 400px;
  flex-direction: column;
  padding: 20px 40px;
  border-radius: 10px;
  box-shadow: 0px 10px 50px #555;

}
.label {
  font-size: 0.8;
  margin-bottom: 0.25;
  color: #222;
  font-weight: lighter;
}
.input {
  padding: 10px 10px;
  border-radius: 5px;
  outline: none;
  border: 1px solid #cfcfcf;
}
.input.placholder {
  font-size: 1.2em;
  font-weight: lighter;
  color: #999999;
}
.input.error {
  border: 1px solid red;
}
.errorMessage {
  color: red;
  font-size: 0.75em;
  display: relative;
}
.firstName {
margin-right: 1%;
}
.lastName {
  margin-left: 1%;
}

